@model BookReviewApp_NL_S04_20.Models.ViewModels.BookDetailsViewModel

@{
    ViewData["Title"] = "Book Details";
    var isAdmin = User.IsInRole("Admin");
    var hasUserReviewed = Model.Reviews.Any(r => r.UserId == Model.CurrentUserId);
    var isLoggedIn = User.Identity.IsAuthenticated;
}

<h2>@Model.Title</h2>

<hr />
<dl class="row">
    <dt class="col-sm-2">Publication Year</dt>
    <dd class="col-sm-10">@Model.PublicationYear</dd>

    <dt class="col-sm-2">Publisher</dt>
    <dd class="col-sm-10">@Model.PublisherName</dd>

    <dt class="col-sm-2">Authors</dt>
    <dd class="col-sm-10">@string.Join(", ", Model.Authors)</dd>

    <dt class="col-sm-2">Categories</dt>
    <dd class="col-sm-10">@string.Join(", ", Model.Categories)</dd>

    <dt class="col-sm-2">Rating</dt>
    <dd class="col-sm-10">
        @Model.AverageRating.ToString("0.0") / 5.0 (@Model.ReviewCount reviews)
    </dd>
</dl>

<hr />
<h4>Reviews</h4>

<div class="row d-flex flex-column" id="reviews-container">
    @if (Model.Reviews.Any())
    {
        foreach (var review in Model.Reviews.OrderByDescending(r => r.PublishedDate))
        {
            <div class="col-md-6 mb-3" data-review-id="@review.Id">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Rating: @review.Rating/5</h5>
                        <h6 class="card-subtitle mb-2 text-muted">
                            by @review.Username on @review.PublishedDate.ToShortDateString()
                        </h6>
                        <p class="card-text">@review.Text</p>

                        <div style ="height:@(isLoggedIn ? "35px" : "px")">
                            @if (Model.CurrentUserId == review.UserId)
                            {
                                <button class="btn btn-sm btn-outline-primary me-2 edit-review-btn"
                                        data-id="@review.Id"
                                        data-rating="@review.Rating"
                                        data-text="@review.Text">
                                    Edit
                                </button>
                            }

                            @if (Model.CurrentUserId == review.UserId || isAdmin)
                            {
                                <button class="btn btn-sm btn-outline-danger delete-review-btn" data-id="@review.Id">Delete</button>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <p class="text-muted">No reviews yet.</p>
    }
</div>

@if (isLoggedIn && !hasUserReviewed)
{
    <hr />
    <h4>Add Your Review</h4>
    <button id="add-review-btn" class="btn btn-outline-success">Leave a Review</button>
}
else if (!isLoggedIn)
{
    <p><em><a asp-area="Identity" asp-page="/Account/Login">Log in</a> to leave a review.</em></p>
}

<div class="modal fade" id="reviewModal" tabindex="-1" aria-labelledby="reviewModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <form id="reviewForm">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="reviewModalLabel">Add / Edit Review</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="ReviewId" name="ReviewId" value="0" />
                    <div class="mb-3">
                        <label for="Rating" class="form-label">Rating</label>
                        <select class="form-select" id="Rating" name="Rating" required>
                            <option value="">Select rating</option>
                            <option value="1">1 - Very bad</option>
                            <option value="2">2 - Bad</option>
                            <option value="3">3 - OK</option>
                            <option value="4">4 - Good</option>
                            <option value="5">5 - Excellent</option>
                        </select>
                        <div class="invalid-feedback">Please select a rating.</div>
                    </div>
                    <div class="mb-3">
                        <label for="Text" class="form-label">Review Text</label>
                        <textarea class="form-control" id="Text" name="Text" rows="4" required minlength="10"></textarea>
                        <div class="invalid-feedback">Please enter at least 10 characters.</div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">Save Review</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                </div>
            </div>
        </form>
    </div>
</div>


@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        $(function () {
            var reviewModal = new bootstrap.Modal(document.getElementById('reviewModal'));

            $('#add-review-btn').click(function () {
                clearForm();
                reviewModal.show();
            });

            $('#reviewForm').submit(function (e) {
                e.preventDefault();

                var form = this;
                if (!form.checkValidity()) {
                    form.classList.add('was-validated');
                    return;
                }

                var reviewData = {
                    Id: parseInt($('#ReviewId').val()),
                    Rating: parseInt($('#Rating').val()),
                    Text: $('#Text').val(),
                    BookId: @Model.Id
                };

                var method = reviewData.Id === 0 ? 'POST' : 'PATCH';
                var url = '/api/review' + (method === 'PATCH' ? '/' + reviewData.Id : '');

                $.ajax({
                    url: url,
                    type: method,
                    contentType: 'application/json',
                    data: JSON.stringify(reviewData),
                    success: function () {
                        reviewModal.hide();
                        location.reload(); // ne znam koliko ima smisla reloadovati celu stranicu kad vec koristimo ajax ali dobro
                    },
                    error: function (xhr) {
                        alert('Error: ' + xhr.responseText);
                    }
                });
            });

            function clearForm() {
                $('#reviewForm')[0].reset();
                $('#ReviewId').val(0);
                $('#reviewForm').removeClass('was-validated');
            }

            $('#reviews-container').on('click', '.delete-review-btn', function () {
                if (!confirm('Are you sure you want to delete this review?')) return;

                var reviewId = $(this).data('id');

                $.ajax({
                    url: '/api/review/' + reviewId,
                    type: 'DELETE',
                    success: function () {
                        location.reload();
                    },
                    error: function (xhr) {
                        alert('Error deleting review: ' + xhr.responseText);
                    }
                });
            });

            $('#reviews-container').on('click', '.edit-review-btn', function () {
                clearForm();

                var reviewId = $(this).data('id');
                var rating = $(this).data('rating');
                var text = $(this).data('text');

                $('#ReviewId').val(reviewId);
                $('#Rating').val(rating);
                $('#Text').val(text);

                reviewModal.show();
            });
        });
    </script>
}

